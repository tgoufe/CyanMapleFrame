{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./node_modules/.pnpm/@babel/runtime@7.10.5/node_modules/@babel/runtime/helpers/getPrototypeOf.js","webpack:///./node_modules/.pnpm/@babel/runtime@7.10.5/node_modules/@babel/runtime/helpers/typeof.js","webpack:///./src/model/model.js","webpack:///./node_modules/.pnpm/@babel/runtime@7.10.5/node_modules/@babel/runtime/helpers/classCallCheck.js","webpack:///./node_modules/.pnpm/@babel/runtime@7.10.5/node_modules/@babel/runtime/helpers/createClass.js","webpack:///./node_modules/.pnpm/@babel/runtime@7.10.5/node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","webpack:///./src/util/merge.js","webpack:///./src/util/listener.js","webpack:///./node_modules/.pnpm/@babel/runtime@7.10.5/node_modules/@babel/runtime/helpers/inherits.js","webpack:///./node_modules/.pnpm/@babel/runtime@7.10.5/node_modules/@babel/runtime/helpers/defineProperty.js","webpack:///./node_modules/.pnpm/@babel/runtime@7.10.5/node_modules/@babel/runtime/helpers/assertThisInitialized.js","webpack:///./node_modules/.pnpm/@babel/runtime@7.10.5/node_modules/@babel/runtime/helpers/slicedToArray.js","webpack:///./src/base.js","webpack:///./node_modules/.pnpm/@babel/runtime@7.10.5/node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack:///./src/util/handlerQueue.js","webpack:///./node_modules/.pnpm/@babel/runtime@7.10.5/node_modules/@babel/runtime/regenerator/index.js","webpack:///./node_modules/.pnpm/@babel/runtime@7.10.5/node_modules/@babel/runtime/helpers/setPrototypeOf.js","webpack:///./node_modules/.pnpm/@babel/runtime@7.10.5/node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack:///./node_modules/.pnpm/@babel/runtime@7.10.5/node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack:///./src/model/cacheStorage.js","webpack:///./node_modules/.pnpm/@babel/runtime@7.10.5/node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack:///./node_modules/.pnpm/@babel/runtime@7.10.5/node_modules/@babel/runtime/helpers/iterableToArray.js","webpack:///./node_modules/.pnpm/@babel/runtime@7.10.5/node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack:///./node_modules/.pnpm/@babel/runtime@7.10.5/node_modules/@babel/runtime/helpers/arrayWithHoles.js","webpack:///./node_modules/.pnpm/@babel/runtime@7.10.5/node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","webpack:///./node_modules/.pnpm/@babel/runtime@7.10.5/node_modules/@babel/runtime/helpers/nonIterableRest.js","webpack:///./node_modules/.pnpm/regenerator-runtime@0.13.7/node_modules/regenerator-runtime/runtime.js","webpack:///./src/worker/serviceWorker.js"],"names":["root","factory","exports","module","define","amd","a","i","this","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_getPrototypeOf","setPrototypeOf","getPrototypeOf","__proto__","_typeof","obj","iterator","constructor","MODEL_CONFIG","eventType","MODEL","MODEL_CACHE","MODEL_ALIAS","asyncIterator","Model","config","merge","CONFIG","e","topic","Promise","all","_syncToList","map","setData","removeData","console","log","then","_value","_history","_$trigger","$listener","on","_sync","length","newVal","oldVal","_lastData","push","_trigger","newValue","oldValue","trigger","entries","k","v","data","getData","reduce","rs","result","_setByObject","configurable","set","_trackData","resolve","argc","arguments","Array","isArray","_getByArray","slice","reject","_removeByArray","keys","forEach","callback","off","model","is","indexOf","splice","JSON","stringify","_MODEL","_MODEL_CACHE","aliasName","_MODEL_ALIAS","type","notCache","options","target","toString","app","inject","$options","Base","use","Listener","instance","Constructor","TypeError","_defineProperties","props","descriptor","writable","protoProps","staticProps","require","assertThisInitialized","self","defaults","LISTENER_CONFIG","observerOptions","ObSERVER_TYPE_LIST","_config","_callbackList","WeakMap","_intersectInited","_intersect$","_mutateInited","_mutate$","_resizeInited","_resize$","IntersectionObserver","entry","handlers","has","_getKey","line","MutationObserver","mutations","mutation","ResizeObserver","ObserverTypeList","capture","_isObserver","args","targetConfig","eventConfig","initBind","_getEventConfig","HandlerQueue","add","_initIntersectionObserver","observe","_initMutationObserver","_initResizeObserver","addEventListener","remove","clear","unobserve","removeEventListener","listener","subClass","superClass","ReferenceError","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","arr","setInjection","Error","Set","mod","arrayWithoutHoles","iterableToArray","nonIterableSpread","_handlers","context","handler","apply","method","first","params","promise","findBy","parseInt","_allExecutor","some","_lineExecutor","_funcExecutor","reduceRight","pipe","compose","_lineExecutorPromise","_funcExecutorPromise","_setPrototypeOf","len","arr2","arrayLikeToArray","minLen","from","test","CACHE_STORAGE_MODEL_CONFIG","cacheName","CacheStorageModel","_store","caches","response","open","cache","url","put","tranToRequest","match","cacheArray","addAll","Request","register","registerAlias","iter","_arr","_n","_d","_e","undefined","_s","_i","next","done","err","runtime","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","toStringTagSymbol","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","Context","_invoke","state","arg","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","makeInvokeMethod","fn","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","values","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","invoke","__await","unwrapped","error","info","resultName","nextLoc","pushTryEntry","locs","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","mark","awrap","async","reverse","pop","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","serviceWorkerRun","cacheUrls","errorHandler","cacheStorage","event","preCache","waitUntil","skipWaiting","keyList","cacheDelete","clients","claim","request","search","location","host","respondWith","fetch","clone","message","isCache","status","index","findIndex","ext","endsWith","RegExp","Response","source","id","focused","visibilityState","matchAll","client","postMessage","tag","json","body","Date","now","title","text","registration","showNotification","lastChance","notification","close","action","openWindow"],"mappings":"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","file":"worker/serviceWorker.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 64);\n","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","'use strict';\r\n\r\nimport Base     from '../base.js';\r\nimport {Listener}   from '../util/listener.js';\r\nimport merge        from '../util/merge.js';\r\n\r\n/**\r\n * 默认配置\r\n * @const\r\n * */\r\nconst MODEL_CONFIG = {\r\n\t\teventType: 'modelChange'\r\n\t}\r\n\t/**\r\n\t * 子类\r\n\t * @const\r\n\t * */\r\n\t, MODEL = {}\r\n\t/**\r\n\t * 子类对象缓存\r\n\t * @const\r\n\t * */\r\n\t, MODEL_CACHE = {}\r\n\t/**\r\n\t * 子类别名列表\r\n\t * @const\r\n\t * */\r\n\t, MODEL_ALIAS = {}\r\n\t;\r\n\r\n/**\r\n * @summary     数据改变事件触发回调函数\r\n * @callback    ModelChangeEvent\r\n * @param       {Event}     event\r\n * @param       {string}    topic\r\n * @param       {*}         newValue\r\n * @param       {*}         [oldValue]\r\n * @this        {Model}\r\n * @desc        函数将传入 topic,newValue 值，当 removeData 执行时也会触发事件，newValue 被传为 null\r\n *              由于统一使用 Listener 对象，第一个参数将为事件对象，当前事件将传入 {type: modelChange, target: 对象实例}\r\n * */\r\n\r\n/**\r\n * @class\r\n * @desc    数据层基类，将数据保存在内存中\r\n * @extends Base\r\n * @example\r\n<pre>\r\nlet model = new Model();\r\n\r\n// 保存数据，以 key-value 的形式保存\r\nmodel.setData('index/first', true).then(()=>{\r\n\tconsole.log('数据保存成功');\r\n});\r\n// 保存对象\r\nmodel.setData({\r\n\tisLogin: true\r\n\t, token: '123123123123123'\r\n\t, hybrid: false\r\n}).then(()=>{\r\n\t// do something\r\n});\r\n\r\n// 获取数据\r\nmodel.getData('index/first').then((value)=>{\r\n\tconsole.log('获取到数据 ', value);\r\n}, (e)=>{\r\n\tconsole.log('当数据不存在时，reject 传入 null');\r\n});\r\n// 以数组的形式获取数据，返回的数据会被组成一个 Json，若 key 对应的 value 不存在会设为 null\r\nmodel.getData(['isLogin', 'token', 'hybrid']).then(({isLogin, token, hybrid})=>{\r\n\tconsole.log(isLogin, token, hybrid);    // true, '123123123123123', false\r\n\t// 利用 JSON.parse 可以解析出基础类型数据\r\n});\r\n// 获取多个数据的返回结果与数组形式相同\r\nmodel.getData('isLogin', 'token', 'hybrid').then(({isLogin, token, hybrid})=>{\r\n\t//\r\n})\r\n</pre>\r\n * */\r\nclass Model extends Base{\r\n\t/**\r\n\t * @constructor\r\n\t * @param   {Object}    [config={}]\r\n\t * @param   {string}    [config.eventType]\r\n\t * */\r\n\tconstructor(config={}){\r\n\t\tconfig = merge(config, Model.CONFIG);\r\n\r\n\t\tsuper( config );\r\n\t\t\r\n\t\tthis._value = Object.create( null );    // 不会受到 prototype 的影响，适合用来存储数据，没有 hasOwnProperty、toString 等方法\r\n\t\tthis._history = Object.create( null );  // 历史记录\r\n\t\tthis._syncToList = [];\r\n\r\n\t\tthis.config = config;\r\n\r\n\t\tthis._$trigger = this.$listener.on(this, this.config.eventType, this._sync);\r\n\t}\r\n\r\n\t// ---------- 静态方法 ----------\r\n\t/**\r\n\t * @summary 注册子类\r\n\t * @static\r\n\t * @param   {string}    name\r\n\t * @param   {Model}     model\r\n\t * @desc    若该子类已经被注册，并且缓存中没有该子类的实例，则覆盖\r\n\t * */\r\n\tstatic register(name, model){\r\n\t\tif( name in Model._MODEL && name in Model._MODEL_CACHE ){\r\n\t\t\tconsole.log(`${name} 重复注册，并已生成实例，不能覆盖`);\r\n\t\t}\r\n\t\telse{\r\n\t\t\tModel._MODEL[name] = model;\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @summary 注册子类的别名\r\n\t * @static\r\n\t * @param   {string}            name        已注册的子类名\r\n\t * @param   {string|string[]}   aliasName   该子类的别名\r\n\t * */\r\n\tstatic registerAlias(name, aliasName){\r\n\t\tif( !Array.isArray(aliasName) ){\r\n\t\t\taliasName = [aliasName];\r\n\t\t}\r\n\r\n\t\taliasName.forEach((d)=>{\r\n\t\t\tif( !(d in Model._MODEL_ALIAS) ){\r\n\t\t\t\tModel._MODEL_ALIAS[d] = name;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tconsole.log(`${d} 已经存在`);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t/**\r\n\t * @summary 获取或生成 type 类型的 Model 子类的实例或 Model 类的实例\r\n\t * @static\r\n\t * @param   {string}            [type]\r\n\t * @param   {boolean|Object}    [notCache=false] 为 boolean 类型时表示是否缓存，默认值为 false，设为 true 时既不从缓存中读取子类实例对象，生成的实例对象也不保存在缓存中；为 object 类型时将值赋给 options 并设置为 true\r\n\t * @param   {Object}            [options={}]\r\n\t * @return  {Model}             当 type 有意义的时候，为 Model 子类类的实例，否则为 Model 类的实例\r\n\t * */\r\n\tstatic factory(type, notCache=false, options={}){\r\n\t\tlet model\r\n\t\t\t;\r\n\r\n\t\tif( type ){\r\n\r\n\t\t\tif( typeof notCache === 'object' ){\r\n\t\t\t\toptions = notCache;\r\n\t\t\t\tnotCache = true;\r\n\t\t\t}\r\n\r\n\t\t\t// 判断 type 是否为别名\r\n\t\t\tif( !(type in Model._MODEL) && (type in Model._MODEL_ALIAS) ){\r\n\t\t\t\ttype = Model._MODEL_ALIAS[type];\r\n\t\t\t}\r\n\r\n\t\t\t// 判断是否存在该子类\r\n\t\t\tif( type in Model._MODEL ){\r\n\r\n\t\t\t\tif( notCache || !(type in Model._MODEL_CACHE) ){    // 不使用缓存或没有该子类实例\r\n\t\t\t\t\tmodel = new Model._MODEL[type]( options );\r\n\r\n\t\t\t\t\tif( !notCache ){\r\n\r\n\t\t\t\t\t\t// 使用缓存，将该子类实例缓存\r\n\t\t\t\t\t\tModel._MODEL_CACHE[type] = model;\r\n\r\n\t\t\t\t\t\tconsole.log(`通过工厂方法生成 ${type} 类型的对象, 将 ${type} 类型的对象缓存`);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse{   // 使用缓存并存在该子类实例\r\n\t\t\t\t\tmodel = Model._MODEL_CACHE[type];\r\n\r\n\t\t\t\t\tconsole.log(`从缓存中取到 ${type} 类型的对象`);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tmodel = new Model();\r\n\r\n\t\t\t\tconsole.log(`不存在注册为 ${type} 的子类`);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse{\r\n\t\t\tmodel = new Model();\r\n\r\n\t\t\tconsole.log('生成 model 对象');\r\n\t\t}\r\n\r\n\t\treturn model;\r\n\t}\r\n\t/**\r\n\t * @summary 判断某一对象是否为 Model 类型\r\n\t * @static\r\n\t * @param   {*}         target\r\n\t * @return  {boolean}   返回结果\r\n\t * */\r\n\tstatic is(target){\r\n\t\treturn target && target[Symbol.toStringTag] === 'Model';\r\n\t}\r\n\t/**\r\n\t * @summary     转为字符串，会将 null,undefined 转为空字符串\r\n\t * @static\r\n\t * @protected\r\n\t * @param       {*}     value\r\n\t * @return      {string}\r\n\t * */\r\n\tstatic stringify(value){\r\n\t\tif( value === null || value === undefined ){\r\n\t\t\tvalue = '';\r\n\t\t}\r\n\r\n\t\treturn typeof value === 'object' ? JSON.stringify( value ) : value.toString();\r\n\t}\r\n\t/**\r\n\t * @summary 与 App 类约定的注入接口\r\n\t * @static\r\n\t * @param   {Base}  app\r\n\t * @desc    注入为 $model，配置参数名 model\r\n\t * */\r\n\tstatic inject(app){\r\n\t\tapp.inject('$model', new Model( app.$options.model ));\r\n\t}\r\n\r\n\t// ---------- 静态属性 ----------\r\n\t/**\r\n\t * @summary 默认配置\r\n\t * @static\r\n\t * @const\r\n\t * */\r\n\tstatic get CONFIG(){\r\n\t\treturn MODEL_CONFIG;\r\n\t}\r\n\t/**\r\n\t * @summary 子类\r\n\t * @static\r\n\t * @private\r\n\t * @const\r\n\t * */\r\n\tstatic get _MODEL(){\r\n\t\treturn MODEL;\r\n\t}\r\n\t/**\r\n\t * @summary 子类对象缓存\r\n\t * @static\r\n\t * @private\r\n\t * @const\r\n\t * */\r\n\tstatic get _MODEL_CACHE(){\r\n\t\treturn MODEL_CACHE;\r\n\t}\r\n\t/**\r\n\t * @summary 子类别名列表\r\n\t * @static\r\n\t * @private\r\n\t * @const\r\n\t * */\r\n\tstatic get _MODEL_ALIAS(){\r\n\t\treturn MODEL_ALIAS;\r\n\t}\r\n\r\n\t// ---------- 私有方法 ----------\r\n\t/**\r\n\t * @summary     获取上一次该 topic 最后记录\r\n\t * @protected\r\n\t * @param       {string}    topic\r\n\t * @return      {*}\r\n\t * @desc        任何 topic 记录的第一个值都为 null\r\n\t * */\r\n\t_lastData(topic){\r\n\t\tlet t = this._history[topic]\r\n\t\t\t;\r\n\r\n\t\tif( !t ){\r\n\t\t\tt = this._history[topic] = [null];\r\n\t\t}\r\n\r\n\t\treturn t[t.length -1];\r\n\t}\r\n\t/**\r\n\t * @summary     记录数据的改变\r\n\t * @protected\r\n\t * @param       {string}    topic\r\n\t * @param       {*}         newVal\r\n\t * */\r\n\t_trackData(topic, newVal){\r\n\t\tlet oldVal = this._lastData( topic )\r\n\t\t\t;\r\n\r\n\t\tif( newVal !== oldVal ){\r\n\t\t\tthis._history[topic].push( newVal );\r\n\t\t\t\r\n\t\t\tconsole.log(`设置 ${topic} 的值为 ${newVal}`);\r\n\r\n\t\t\tthis._trigger(topic, newVal, oldVal);\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @summary     触发绑定的数据监控事件\r\n\t * @protected\r\n\t * @param       {string}    topic\r\n\t * @param       {*}         newValue\r\n\t * @param       {*}         oldValue\r\n\t * */\r\n\t_trigger(topic, newValue, oldValue){\r\n\t\tthis._$trigger.trigger(topic, newValue, oldValue);\r\n\t}\r\n\t/**\r\n\t * @summary     modelChange 事件监听回调，以实现数据同步\r\n\t * @protected\r\n\t * @param       {Event}     e\r\n\t * @param       {string}    topic\r\n\t * @param       {*}         value\r\n\t * @return      {Promise}\r\n\t * */\r\n\t_sync = (e, topic, value)=>{\r\n\t\treturn Promise.all( this._syncToList.map((m)=>{\r\n\t\t\tlet result\r\n\t\t\t\t;\r\n\r\n\t\t\tif( value !== null ){\r\n\t\t\t\tresult = m.setData(topic, value);\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tresult = m.removeData( topic );\r\n\t\t\t}\r\n\r\n\t\t\treturn result.catch(function(e){\r\n\t\t\t\tconsole.log(`${m.constructor.name} ${topic} ${value} 同步失败`, e);\r\n\t\t\t});\r\n\t\t}) ).then(function(){\r\n\t\t\tconsole.log('同步完成');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * @summary     当 setData 传入一个 json 时内部调用函数\r\n\t * @protected\r\n\t * @param       {Object}    topic\r\n\t * @return      {Promise<boolean>}  返回一个 Promise 对象，在 resolve 时传回 true\r\n\t * */\r\n\t_setByObject(topic){\r\n\t\treturn Promise.all( Object.entries(topic).map(([k, v])=>{\r\n\t\t\treturn this.setData(k, v);\r\n\t\t}) ).then((data)=>{\r\n\t\t\treturn !!data;\r\n\t\t});\r\n\t}\r\n\t/**\r\n\t * @summary     当 getData 传入一个数组时内部调用函数\r\n\t * @protected\r\n\t * @param       {string[]}  topic\r\n\t * @return      {Promise}   返回一个 Promise 对象，在 resolve 时传回一个 json，key 为 topic 中的数据，value 为对应查找出来的值\r\n\t * @desc        其中如果任何一个 key 没有值，则返回 null\r\n\t * */\r\n\t_getByArray(topic){\r\n\t\treturn Promise.all( topic.map((d)=>{\r\n\t\t\treturn this.getData( d ).catch(()=>{\r\n\t\t\t\treturn null;\r\n\t\t\t});\r\n\t\t}) ).then((data)=>{\r\n\t\t\treturn topic.reduce((rs, d, i)=>{\r\n\t\t\t\trs[d] = data[i];\r\n\r\n\t\t\t\treturn rs;\r\n\t\t\t}, {});\r\n\t\t});\r\n\t}\r\n\t/**\r\n\t * @summary     当 removeData 传入一个数组时内部调用函数\r\n\t * @protected\r\n\t * @param       {string[]}  topic\r\n\t * @return      {Promise}   返回一个 Promise 对象，在 resolve 时传回 true\r\n\t * */\r\n\t_removeByArray(topic){\r\n\t\treturn Promise.all( topic.map((d)=>{\r\n\t\t\treturn this.removeData( d );\r\n\t\t}) ).then((data)=>{\r\n\t\t\treturn !!data;\r\n\t\t});\r\n\t}\r\n\r\n\t// ---------- 公有方法 ----------\r\n\t/**\r\n\t * @summary 设置数据\r\n\t * @param   {string|Object} topic   主题\r\n\t * @param   {*}             [value] 为 null、undefined 时会被保存为空字符串，当 topic 为 object 类型时被忽略\r\n\t * @return  {Promise<boolean>}  返回一个 Promise 对象，在 resolve 时传回 true\r\n\t * @desc    设置数据的时候会使用 Object.defineProperty 定义该属性\r\n\t *\t\t\t目前子类的实现中都调用了 super.setData，若其它子类的实现中并没有调用，但需对数据监控，应在适当的时候调用 _trigger 方法\r\n\t * */\r\n\tsetData(topic, value){\r\n\t\tlet result\r\n\t\t\t;\r\n\r\n\t\tif( typeof topic === 'object' ){\r\n\t\t\tresult = this._setByObject( topic );\r\n\t\t}\r\n\t\telse{\r\n\t\t\tif( topic in this._value ){\r\n\t\t\t\tthis._value[topic] = value;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\t/**\r\n\t\t\t\t * 不能同时设置访问器（get 和 set）和 writable 或 value，否则会报错误\r\n\t\t\t\t * configurable 设为 true 才可以使用 delete\r\n\t\t\t\t * */\r\n\t\t\t\tObject.defineProperty(this._value, topic, {\r\n\t\t\t\t\tenumerable: true\r\n\t\t\t\t\t, configurable: true\r\n\t\t\t\t\t// , value: value\r\n\t\t\t\t\t, set: (newVal)=>{\r\n\t\t\t\t\t\tthis._trackData(topic, newVal);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t, get: ()=>{\r\n\t\t\t\t\t\treturn this._lastData( topic );\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis._trackData(topic, value);\r\n\t\t\t}\r\n\r\n\t\t\tresult = Promise.resolve( true );\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\t/**\r\n\t * @summary 获取数据\r\n\t * @param   {string|string[]} topic\r\n\t * @param   {...string}\r\n\t * @return  {Promise<*, null>}          返回一个 Promise 对象，在 resolve 时传回查询出来的 value，否则在 reject 时传回 null\r\n\t * @desc    当 topic 的类型为数组的时候，resolve 传入的结果为一个 json，key 为 topic 中的数据，value 为对应查找出来的值，当传入多个参数时视为传入数组的操作\r\n\t * */\r\n\tgetData(topic){\r\n\t\tlet argc = arguments.length\r\n\t\t\t, result\r\n\t\t\t;\r\n\r\n\t\tif( Array.isArray(topic) ){\r\n\t\t\tresult = this._getByArray( topic );\r\n\t\t}\r\n\t\telse if( argc > 1 ){\r\n\t\t\tresult = this._getByArray( [].slice.call(arguments) );\r\n\t\t}\r\n\t\telse{\r\n\t\t\tif( topic in this._value ){\r\n\t\t\t\tresult = Promise.resolve( this._value[topic] );\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tresult = Promise.reject( null );\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn result;\r\n\t}\r\n\t/**\r\n\t * @summary 将数据从缓存中删除\r\n\t * @param   {string|string[]}           topic\r\n\t * @param   {...string}\r\n\t * @return  {Promise<boolean, Error>}   返回一个 Promise 对象，在 resolve 时传回 true\r\n\t * @desc    目前子类的实现中都调用了 super.removeData，若其它子类的实现中并没有调用，但需对数据监控，应在适当的时候调用 _trigger 方法\r\n\t * */\r\n\tremoveData(topic){\r\n\t\tlet argc = arguments.length\r\n\t\t\t, result\r\n\t\t\t;\r\n\r\n\t\tif( Array.isArray(topic) ){\r\n\t\t\tresult = this._removeByArray( topic );\r\n\t\t}\r\n\t\telse if( argc > 1 ){\r\n\t\t\tresult = this._removeByArray( [].slice.call(arguments) );\r\n\t\t}\r\n\t\telse{\r\n\t\t\ttry {\r\n\t\t\t\t// if( topic in this._value ){\r\n\t\t\t\t//\r\n\t\t\t\t// \tlet t = this._value[topic]\r\n\t\t\t\t// \t\t;\r\n\t\t\t\t//\r\n\t\t\t\t// \tdelete this._value[topic];\r\n\t\t\t\t//\r\n\t\t\t\t// \tthis._trigger(topic, null, t);\r\n\t\t\t\t// }\r\n\t\t\t\t// else{   // model 中不存在该数据\r\n\t\t\t\t// \tthis._trigger(topic, null, void 0);\r\n\t\t\t\t// }\r\n\r\n\t\t\t\t/**\r\n\t\t\t\t * 取消使用 delete 删除属性值，而将值设置为 null\r\n\t\t\t\t * */\r\n\t\t\t\tthis._value = null;\r\n\r\n\t\t\t\tresult = Promise.resolve( true );\r\n\t\t\t}\r\n\t\t\tcatch(e){\r\n\t\t\t\tresult = Promise.reject( e );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\t/**\r\n\t * @summary 清空数据\r\n\t * @return  {Promise<boolean>}   返回一个 Promise 对象，在 resolve 时传回 true\r\n\t * @desc    清空操作将不触发监听事件\r\n\t * */\r\n\tclearData(){\r\n\t\tObject.keys( this._value ).forEach((k)=>{\r\n\t\t\tlet oldVal = this._lastData( k )\r\n\t\t\t\t;\r\n\r\n\t\t\tif( oldVal !== null ){\r\n\t\t\t\tthis._history[k].push( null );\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis._value = {};\r\n\r\n\t\treturn Promise.resolve( true );\r\n\t}\r\n\r\n\t/**\r\n\t * @summary 绑定数据监视事件\r\n\t * @param   {ModelChangeEvent}  callback\r\n\t * @return  {Model}             返回 this\r\n\t * */\r\n\ton(callback){\r\n\t\tthis.$listener.on(this, this.config.eventType, callback);\r\n\r\n\t\treturn this;\r\n\t}\r\n\t/**\r\n\t * @summary 解除绑定数据监控回调函数\r\n\t * @param   {ModelChangeEvent}  callback\r\n\t * */\r\n\toff(callback){\r\n\t\tthis.$listener.off(this, this.config.eventType, callback);\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * @summary 将当前 model 的数据同步到其它 model\r\n\t * @param   {Model|Model[]} model\r\n\t * @return  {Model}         返回 this\r\n\t * */\r\n\tsyncTo(model){\r\n\t\tif( !Array.isArray(model) ){\r\n\t\t\tmodel = [model];\r\n\t\t}\r\n\r\n\t\tmodel.forEach((m)=>{\r\n\t\t\tif( Model.is( m )\r\n\t\t\t\t&& m !== this\r\n\t\t\t\t&& this._syncToList.indexOf( m ) === -1 ){\r\n\t\t\t\t\r\n\t\t\t\tthis._syncToList.push( m );\r\n\t\t\t}\r\n\t\t\telse{   // 该实例类型已经存在\r\n\t\t\t\tconsole.log('该实例类型已经存在');\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn this;\r\n\t}\r\n\t/**\r\n\t * @summary 清除数据同步\r\n\t * @param   {Model} model\r\n\t * @return  {Model} 返回 this\r\n\t * */\r\n\tcleanSync(model){\r\n\t\tlet i = this._syncToList.indexOf( model )\r\n\t\t\t;\r\n\r\n\t\tif( i !== -1 ){\r\n\t\t\tthis._syncToList.splice(i, 1);\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * @summary toString 方法\r\n\t * */\r\n\ttoString(){\r\n\t\treturn JSON.stringify( this._value );\r\n\t}\r\n\t/**\r\n\t * @summary toJSON 方法\r\n\t * @desc    JSON.stringify 序列化 Model 及子类的实例对象时调用\r\n\t * */\r\n\ttoJSON(){\r\n\t\treturn this._value;\r\n\t}\r\n\t/**\r\n\t * @summary 实现迭代器接口\r\n\t * @return  {Array}\r\n\t * @desc    适用于 for-of\r\n\t * */\r\n\t*[Symbol.iterator](){\r\n\t\tlet entries = Object.entries( this._value )\r\n\t\t\t;\r\n\r\n\t\tfor(let i = 0, l = entries.length; i < l; i++){\r\n\t\t\tyield {\r\n\t\t\t\ttopic: entries[i][0]\r\n\t\t\t\t, value: entries[i][1]\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @summary 实现异步迭代器接口\r\n\t * @return\r\n\t * @desc    适用于 for-await-of\r\n\t * */\r\n\t*[Symbol.asyncIterator](){\r\n\t\tlet entries = Object.entries( this._value )\r\n\t\t\t;\r\n\r\n\t\tfor(let i = 0, l = entries.length; i < l; i++){\r\n\t\t\tyield Promise.resolve({\r\n\t\t\t\ttopic: entries[i][0]\r\n\t\t\t\t, value: entries[i][1]\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t// ---------- 公有属性 ----------\r\n\t/**\r\n\t * @summary 实现 toStringTag 接口\r\n\t * @desc    在 Object.prototype.toString.call( new Model() ); 时将返回 [object Model]\r\n\t * */\r\n\tget [Symbol.toStringTag](){\r\n\t\treturn 'Model';\r\n\t}\r\n}\r\n\r\nModel.use( Listener );\r\n\r\nexport default Model;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","var _typeof = require(\"../helpers/typeof\");\n\nvar assertThisInitialized = require(\"./assertThisInitialized\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;","'use strict';\r\n\r\n/**\r\n * @file    将 2 个对象合并成一个新的对象\r\n * */\r\n\r\n/**\r\n * @summary     将 2 个对象合并成一个新的对象\r\n * @function    merge\r\n * @memberOf    maple.util\r\n * @param       {Object}    target\r\n * @param       {Object}    defaults\r\n * @return      {Object}\r\n * */\r\nlet merge = function(target, defaults){\r\n\treturn {\r\n\t\t...defaults\r\n\t\t, ...target\r\n\t};\r\n};\r\n\r\nexport default merge;","'use strict';\r\n\r\n/**\r\n * @file    全局事件监听对象\r\n * */\r\n\r\nimport Base from '../base.js';\r\nimport merge        from './merge.js';\r\nimport HandlerQueue from './handlerQueue.js';\r\n\r\n/**\r\n * 监听事件的默认配置\r\n * @const\r\n * */\r\nconst LISTENER_CONFIG = {\r\n\t\tobserverOptions: {}\r\n\t}\r\n\t, INTERSECTION_OBSERVER = 'intersectionObserver'\r\n\t, MUTATION_OBSERVER = 'mutationObserver'\r\n\t, RESIZE_OBSERVER = 'resizeObserver'\r\n\t, ObSERVER_TYPE_LIST = [\r\n\t\tINTERSECTION_OBSERVER\r\n\t\t, MUTATION_OBSERVER\r\n\t\t, RESIZE_OBSERVER\r\n\t]\r\n\t;\r\n\r\n/**\r\n * @summary     监听事件回调\r\n * @callback    ListenerCallback\r\n * @param       {Object|Event}  event\r\n * @param       {...*}\r\n * @this        target\r\n * */\r\n\r\n/**\r\n * @class\r\n * @desc    全局事件监听抽象类，默认使用捕获方式\r\n * @extends Base\r\n * */\r\nclass Listener extends Base{\r\n\t/**\r\n\t * @constructor\r\n\t * @param   {Object}    [config]\r\n\t * @param   {Object}    [config.observerOptions]\r\n\t * @param   {Element}   [config.observerOptions.root]\r\n\t * @param   {string}    [config.observerOptions.rootMargin] 计算交叉值时添加至根的边界盒中的一组偏移量，语法和 CSS 中的 margin 属性等同，默认值为 '0px 0px 0px 0px'\r\n\t * @param   {number}    [config.observerOptions.threshold]  监听目标与边界盒交叉区域的比例值，从 0.0 到 1.0 之间的数组\r\n\t * */\r\n\tconstructor(config={}){\r\n\t\tconfig = merge(config, Listener.CONFIG);\r\n\r\n\t\tsuper( config );\r\n\r\n\t\tthis._config = config;\r\n\r\n\t\tthis._callbackList = new WeakMap();\r\n\r\n\t\tthis._intersectInited = false;\r\n\t\tthis._intersect$ = null;\r\n\r\n\t\tthis._mutateInited = false;\r\n\t\tthis._mutate$ = null;\r\n\r\n\t\tthis._resizeInited = false;\r\n\t\tthis._resize$ = null;\r\n\t}\r\n\r\n\t// ---------- 静态方法 ----------\r\n\t/**\r\n\t * @summary 与 App 类约定的注入接口\r\n\t * @static\r\n\t * @param   {Base}  app\r\n\t * @desc    注入为 $listener，配置参数名 listener\r\n\t * */\r\n\tstatic inject(app){\r\n\t\tapp.inject('$listener', listener);\r\n\t}\r\n\r\n\t// ---------- 静态属性 ----------\r\n\t/**\r\n\t * @summary 监听事件的默认配置\r\n\t * @static\r\n\t * @const\r\n\t * */\r\n\tstatic get CONFIG(){\r\n\t\treturn LISTENER_CONFIG;\r\n\t}\r\n\t/**\r\n\t * @summary IntersectionObserver 监听标识\r\n\t * @static\r\n\t * @const\r\n\t * */\r\n\tstatic get IntersectionObserver(){\r\n\t\treturn INTERSECTION_OBSERVER;\r\n\t}\r\n\t/**\r\n\t * @summary MutationObserver 监听标识\r\n\t * @static\r\n\t * @const\r\n\t * */\r\n\tstatic get MutationObserver(){\r\n\t\treturn MUTATION_OBSERVER;\r\n\t}\r\n\t/**\r\n\t * @summary ResizeObserver 监听标识\r\n\t * @static\r\n\t * @const\r\n\t * */\r\n\tstatic get ResizeObserver(){\r\n\t\treturn RESIZE_OBSERVER;\r\n\t}\r\n\t/**\r\n\t * @summary 所有 observer 类型的监听标识\r\n\t * */\r\n\tstatic get ObserverTypeList(){\r\n\t\treturn ObSERVER_TYPE_LIST;\r\n\t}\r\n\r\n\t// ---------- 私有方法 ----------\r\n\t/**\r\n\t * @summary 初始化 IntersectionObserver\r\n\t * @private\r\n\t * */\r\n\t_initIntersectionObserver(){\r\n\t\tif( this._intersectInited ){\r\n\t\t\treturn ;\r\n\t\t}\r\n\r\n\t\tthis._intersect$ = new IntersectionObserver((entries)=>{\r\n\t\t\tentries.forEach((entry)=>{\r\n\t\t\t\tlet target = entry.target\r\n\t\t\t\t\t, handlers\r\n\t\t\t\t\t;\r\n\r\n\t\t\t\tif( this._callbackList.has(target) ){\r\n\t\t\t\t\thandlers = this._callbackList.get( target )[this._getKey(Listener.IntersectionObserver)];\r\n\r\n\t\t\t\t\tif( handlers && handlers.handlers ){\r\n\t\t\t\t\t\thandlers.handlers.with( target ).line({\r\n\t\t\t\t\t\t\ttarget\r\n\t\t\t\t\t\t\t, type: Listener.IntersectionObserver\r\n\t\t\t\t\t\t}, entry);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}, this._config.observerOptions);\r\n\r\n\t\tthis._intersectInited = true;\r\n\t}\r\n\t/**\r\n\t * @summary 初始化 MutationObserver\r\n\t * @private\r\n\t * */\r\n\t_initMutationObserver(){\r\n\t\tif( this._mutateInited ){\r\n\t\t\treturn ;\r\n\t\t}\r\n\r\n\t\tthis._mutate$ = new MutationObserver((mutations)=>{\r\n\t\t\tmutations.forEach((mutation)=>{\r\n\t\t\t\tlet target = mutation.target\r\n\t\t\t\t\t, handlers\r\n\t\t\t\t\t;\r\n\r\n\t\t\t\tif( this._callbackList.has(target) ){\r\n\t\t\t\t\thandlers = this._callbackList.get( target )[this._getKey(Listener.MutationObserver)];\r\n\r\n\t\t\t\t\tif( handlers && handlers.handlers ){\r\n\t\t\t\t\t\thandlers.handlers.with( target ).line({\r\n\t\t\t\t\t\t\ttarget\r\n\t\t\t\t\t\t\t, type: Listener.MutationObserver\r\n\t\t\t\t\t\t}, mutation);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tthis._mutateInited = true;\r\n\t}\r\n\t/**\r\n\t * @summary 初始化 ResizeObserver\r\n\t * @private\r\n\t * */\r\n\t_initResizeObserver(){\r\n\t\tif( this._resizeInited ){\r\n\t\t\treturn ;\r\n\t\t}\r\n\r\n\t\tthis._resize$ = new ResizeObserver((entries)=>{\r\n\t\t\tentries.forEach((entry)=>{\r\n\t\t\t\tlet target = entry.target\r\n\t\t\t\t\t, handlers\r\n\t\t\t\t\t;\r\n\r\n\t\t\t\tif( this._callbackList.has(target) ){\r\n\t\t\t\t\thandlers = this._callbackList.get( target )[this._getKey(Listener.ResizeObserver)];\r\n\r\n\t\t\t\t\tif( handlers && handlers.handlers ){\r\n\t\t\t\t\t\thandlers.handlers.with( target ).line({\r\n\t\t\t\t\t\t\ttarget\r\n\t\t\t\t\t\t\t, type: Listener.ResizeObserver\r\n\t\t\t\t\t\t}, entry);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tthis._resizeInited = true;\r\n\t}\r\n\t/**\r\n\t * @summary 判断 type 是否为 observer\r\n\t * @private\r\n\t * @return  {boolean}\r\n\t * */\r\n\t_isObserver(type){\r\n\t\treturn Listener.ObserverTypeList.indexOf( type ) !== -1;\r\n\t}\r\n\r\n\t/**\r\n\t * @summary 获取事件配置\r\n\t * @private\r\n\t * @param   {Window|Document|Element|Object}    target\r\n\t * @param   {string}    type\r\n\t * @param   {boolean}   capture\r\n\t * @return  {Object|null}\r\n\t * */\r\n\t_getEventConfig(target, type, capture){\r\n\t\tlet targetConfig\r\n\t\t\t, key = this._getKey(type, capture)\r\n\t\t\t;\r\n\r\n\t\tif( !this._callbackList.has(target) ){\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\ttargetConfig = this._callbackList.get( target );\r\n\r\n\t\treturn targetConfig[key] || null;\r\n\t}\r\n\t/**\r\n\t * @summary 获取事件键值\r\n\t * @private\r\n\t * @param   {string}    type\r\n\t * @param   {boolean}   capture\r\n\t * @return  {string}\r\n\t * */\r\n\t_getKey(type, capture){\r\n\t\tif( this._isObserver(type) ){\r\n\t\t\treturn Symbol.for( type );\r\n\t\t}\r\n\r\n\t\treturn Symbol.for( JSON.stringify({\r\n\t\t\ttype\r\n\t\t\t, capture\r\n\t\t}) );\r\n\t}\r\n\t/**\r\n\t * @summary 事件执行\r\n\t * @private\r\n\t * @param   {Window|Document|Element|Object}    target\r\n\t * @param   {string}        type\r\n\t * @param   {HandlerQueue}  handlers\r\n\t * @param   {...*}          [args]  事件执行时的传参\r\n\t * @return  {*}\r\n\t * */\r\n\t_trigger(target, type, handlers, ...args){\r\n\t\treturn handlers.with( target ).line({\r\n\t\t\ttarget\r\n\t\t\t, type\r\n\t\t}, ...args);\r\n\t}\r\n\r\n\t// ---------- 公有方法 ----------\r\n\t/**\r\n\t * @summary 添加监听事件\r\n\t * @param   {Window|Document|Element|Object|string} target\r\n\t * @param   {string|ListenerCallback}   type\r\n\t * @param   {ListenerCallback|Object}   [callback={}]\r\n\t * @param   {Object}                    [options={}]\r\n\t * @param   {boolean}                   [options.capture]\r\n\t * @param   {boolean}                   [options.passive]\r\n\t * @param   {boolean}                   [options.once]\r\n\t * @return  {Object}    返回一个带有 trigger 方法的对象，可以用来触发此次绑定的事件\r\n\t * @desc    可以传四个参数，最少传两个参数，若只传两个参数会视为 type 和 callback\r\n\t * */\r\n\ton(target, type, callback={}, options={}){\r\n\t\tlet initBind = false\r\n\t\t\t, targetConfig\r\n\t\t\t, eventConfig\r\n\t\t\t, handlers\r\n\t\t\t, key\r\n\t\t\t, capture\r\n\t\t\t;\r\n\r\n\t\tif( typeof callback === 'object' ){\r\n\t\t\toptions = callback;\r\n\t\t\tcallback = null;\r\n\t\t}\r\n\r\n\t\tif( typeof type === 'function' ){\r\n\t\t\tcallback = type;\r\n\t\t\ttype = null;\r\n\t\t}\r\n\r\n\t\tif( typeof target === 'string' ){\r\n\t\t\ttype = target;\r\n\t\t\ttarget = null;\r\n\t\t}\r\n\r\n\t\tif( !target ){\r\n\t\t\ttarget = self;\r\n\t\t}\r\n\r\n\t\tcapture = !!options.capture;\r\n\r\n\t\tif( !this._callbackList.has(target) ){\r\n\t\t\tthis._callbackList.set(target, {});\r\n\r\n\t\t\t// todo 添加事件\r\n\t\t\tinitBind = true;\r\n\t\t}\r\n\r\n\t\ttargetConfig = this._callbackList.get( target );\r\n\r\n\t\teventConfig = this._getEventConfig(target, type, capture);\r\n\r\n\t\tif( !eventConfig ){\r\n\t\t\tkey = this._getKey(type, capture);\r\n\r\n\t\t\teventConfig = targetConfig[key] = {\r\n\t\t\t\thandlers: new HandlerQueue()\r\n\t\t\t};\r\n\r\n\t\t\tinitBind = true;\r\n\t\t}\r\n\r\n\t\thandlers = eventConfig.handlers;\r\n\r\n\t\thandlers.add( callback );\r\n\r\n\t\tif( initBind ){\r\n\t\t\tif( type === Listener.IntersectionObserver ){\r\n\t\t\t\tthis._initIntersectionObserver();\r\n\t\t\t\tthis._intersect$.observe( target );\r\n\t\t\t}\r\n\t\t\telse if( type === Listener.MutationObserver ){\r\n\t\t\t\tthis._initMutationObserver();\r\n\t\t\t\tthis._mutate$.observe(target, options);\r\n\t\t\t}\r\n\t\t\telse if( type === Listener.ResizeObserver ){\r\n\t\t\t\tthis._initResizeObserver();\r\n\t\t\t\tthis._resize$.observe( target );\r\n\t\t\t}\r\n\t\t\telse if( 'addEventListener' in target && typeof target.addEventListener === 'function' ){\r\n\t\t\t\teventConfig.callback = function(...args){\r\n\t\t\t\t\treturn handlers.with( this ).line( ...args );\r\n\t\t\t\t};\r\n\r\n\t\t\t\ttarget.addEventListener(type, eventConfig.callback, options);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\ttrigger: (...args)=>{\r\n\t\t\t\treturn this._trigger(target, type, handlers, ...args);\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\t/**\r\n\t * @summary 取消监听\r\n\t * @param   {Window|Document|Element|Object|string} target\r\n\t * @param   {string|ListenerCallback}   type\r\n\t * @param   {ListenerCallback|Object}   [callback={}]\r\n\t * @param   {Object}                    [options={}]\r\n\t * @param   {boolean}                   [options.capture]\r\n\t * @param   {boolean}                   [options.passive]\r\n\t * @param   {boolean}                   [options.once]\r\n\t * @return  {Listener}                  返回 this，可以使用链式操作\r\n\t * @desc    可以传四个参数，最少传一个参数，若只传一个参数会视为 type\r\n\t * */\r\n\toff(target, type, callback={}, options={}){\r\n\t\tlet eventConfig\r\n\t\t\t, handlers\r\n\t\t\t, capture\r\n\t\t\t;\r\n\r\n\t\tif( typeof callback === 'object' ){\r\n\t\t\toptions = callback;\r\n\t\t\tcallback = null;\r\n\t\t}\r\n\r\n\t\tif( typeof type === 'function' ){\r\n\t\t\tcallback = type;\r\n\t\t\ttype = null;\r\n\t\t}\r\n\r\n\t\tif( typeof target === 'string' ){\r\n\t\t\ttype = target;\r\n\t\t\ttarget = null;\r\n\t\t}\r\n\r\n\t\tif( !target ){\r\n\t\t\ttarget = self;\r\n\t\t}\r\n\r\n\t\tcapture = !!options.capture;\r\n\r\n\t\teventConfig = this._getEventConfig(target, type, capture);\r\n\r\n\t\tif( !eventConfig ){\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\thandlers = eventConfig.handlers;\r\n\r\n\t\tif( callback ){\r\n\t\t\thandlers.remove( callback );\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\thandlers.clear();\r\n\r\n\t\tif( type === Listener.IntersectionObserver ){\r\n\t\t\tthis._intersect$.unobserve( target );\r\n\t\t}\r\n\t\telse if( type === Listener.MutationObserver ){\r\n\t\t\tthis._mutate$.unobserve(target, options);\r\n\t\t}\r\n\t\telse if( type === Listener.ResizeObserver ){\r\n\t\t\tthis._resize$.unobserve( target );\r\n\t\t}\r\n\t\telse if( 'removeEventListener' in target && typeof target.removeEventListener === 'function' ){\r\n\t\t\ttarget.removeEventListener(type, eventConfig.callback, options);\r\n\t\t}\r\n\r\n\t\tdelete this._callbackList.get( target )[this._getKey(type, capture)];\r\n\r\n\t\treturn this;\r\n\t}\r\n\t/**\r\n\t * @summary 触发执行事件\r\n\t * @param   {Window|Document|Element|Object}    target\r\n\t * @param   {string}    type\r\n\t * @param   {boolean}   [capture=false]\r\n\t * @param   {...*}      [args]          触发事件时传递的参数\r\n\t * @return  {*}\r\n\t * */\r\n\ttrigger(target, type, capture=false, ...args){\r\n\t\tlet eventConfig\r\n\t\t\t, handlers\r\n\t\t\t;\r\n\r\n\t\tif( typeof target === \"string\" ){\r\n\t\t\ttype = target;\r\n\t\t\ttarget = null;\r\n\t\t}\r\n\r\n\t\tif( !target ){\r\n\t\t\ttarget = self;\r\n\t\t}\r\n\r\n\t\teventConfig = this._getEventConfig(target, type, capture);\r\n\r\n\t\tif( !eventConfig ){\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\t\r\n\t\thandlers = eventConfig.handlers;\r\n\r\n\t\treturn this._trigger(target, type, handlers, ...args);\r\n\t}\r\n\t/**\r\n\t * @summary 根据对象触发相关事件\r\n\t * @param   {Window|Document|Element|Object}    [target]\r\n\t * @return  {Object}\r\n\t * @example\r\n\t *  listener.target( dom ).type('click').trigger();\r\n\t * */\r\n\ttarget(target){\r\n\t\tif( !target ){\r\n\t\t\ttarget = self;\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\ttype: (type, capture=false)=>{\r\n\t\t\t\treturn {\r\n\t\t\t\t\ttrigger: (...args)=>{\r\n\t\t\t\t\t\tlet eventConfig\r\n\t\t\t\t\t\t\t, handlers\r\n\t\t\t\t\t\t\t;\r\n\r\n\t\t\t\t\t\teventConfig = this._getEventConfig(target, type, capture);\r\n\r\n\t\t\t\t\t\tif( !eventConfig ){\r\n\t\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\thandlers = eventConfig.handlers;\r\n\r\n\t\t\t\t\t\treturn this._trigger(target, type, handlers, ...args);\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\t/**\r\n\t * @summary 根据事件类型触发相关事件\r\n\t * @param   {string}    type\r\n\t * @return  {Object}\r\n\t * @desc    默认执行绑定在全局的事件\r\n\t * @example\r\n\t *  listener.type('click').trigger();\r\n\t * */\r\n\ttype(type){\r\n\t\treturn this.target().type( type );\r\n\t}\r\n\r\n\t// ---------- 公有属性 ----------\r\n\t/**\r\n\t * @summary 实现 toStringTag 接口\r\n\t * @desc    在 Object.prototype.toString.call( new Listener() ); 时将返回 [object Listener]\r\n\t * */\r\n\tget [Symbol.toStringTag](){\r\n\t\treturn 'Listener';\r\n\t}\r\n}\r\n\r\nconst listener = new Listener()\r\n\t;\r\n\r\nexport default listener;\r\n\r\nexport {\r\n\tListener\r\n};","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","'use strict';\r\n\r\n/**\r\n * @class\r\n * @desc    所有类的基类，实现了依赖注入功能，每个继承的应该提供一个静态的 inject 方法提供依赖注入\r\n * @desc    所有继承的子类提供一个名为 inject 的静态方法\r\n *          也可以是有 inject 方法的对象\r\n * @example\r\n<pre>\r\nclass Example extends Base{\r\n\tstatic inject(app){\r\n\t\tapp.inject('$example', new Example());\r\n\t}\r\n}\r\n\r\nclass A extends Base{}\r\nA.use( Example );\r\nA.use({\r\n\tinject(app){\r\n\t\tapp.inject('$test', Object);\r\n\t}\r\n});\r\n\r\nlet a = new A()\r\n    ;\r\n\r\n// a.$example\r\n// a.$test\r\n</pre>\r\n * */\r\nclass Base{\r\n\t/**\r\n\t * @constructor\r\n\t * @param   {Object}    [options={}] 生成实例的参数，赋值给 this.$options\r\n\t * */\r\n\tconstructor(options={}){\r\n\t\tthis.$options = options;\r\n\t\tthis.setInjection();\r\n\t}\r\n\r\n\t// ---------- 静态方法 ----------\r\n\t/**\r\n\t * @summary 声明依赖\r\n\t * @static\r\n\t * @param   {Base}  module\r\n\t * @param   {...Base}\r\n\t * */\r\n\tstatic use(...module){\r\n\t\tif( !this.modules ){\r\n\t\t\tthis.modules = new Set();\r\n\t\t}\r\n\r\n\t\tmodule.forEach((mod)=>{\r\n\t\t\tthis.modules.add( mod );\r\n\t\t});\r\n\t}\r\n\r\n\t// ---------- 公有方法 ----------\r\n\t/**\r\n\t * @summary 执行注入\r\n\t * */\r\n\tsetInjection(){\r\n\t\tif( !this.constructor.modules ){\r\n\t\t\treturn ;\r\n\t\t}\r\n\r\n\t\tthis.constructor.modules.forEach((module)=>{\r\n\t\t\tmodule.inject && module.inject( this );\r\n\t\t});\r\n\t}\r\n\t/**\r\n\t * @summary 子类继承的注入接口\r\n\t * */\r\n\tinject(key, module){\r\n\t\tif( key in this ){\r\n\t\t\tthrow new Error(`${key} 已经注入，不能重复注入`);\r\n\t\t}\r\n\t\telse{\r\n\t\t\tObject.defineProperty(this, key, {\r\n\t\t\t\tenumerable: true\r\n\t\t\t\t, get(){\r\n\t\t\t\t\treturn module;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default Base;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","'use strict';\r\n\r\nimport Base from '../base.js'\r\n\r\n/**\r\n * @class\r\n * @desc    对函数队列统一进行操作，目前有 all、line、pipe 和 compose 四个方法\r\n * @extends Base\r\n * */\r\nclass HandlerQueue extends Base{\r\n\t/**\r\n\t * @constructor\r\n\t * */\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis._handlers = [];\r\n\t}\r\n\r\n\t// ---------- 静态方法 ----------\r\n\t/**\r\n\t * @summary 判断某一对象是否为 HandlerQueue 类型\r\n\t * @static\r\n\t * @param   {*}         target\r\n\t * @return  {boolean}   返回结果\r\n\t * */\r\n\tstatic is(target){\r\n\t\treturn target && target[Symbol.toStringTag] === 'HandlerQueue';\r\n\t}\r\n\t/**\r\n\t * @summary 与 App 类约定的注入接口\r\n\t * @static\r\n\t * @param   {Base}  app\r\n\t * @desc    注入为 $handlers\r\n\t * */\r\n\tstatic inject(app){\r\n\t\tapp.inject('$handlers', new HandlerQueue());\r\n\t}\r\n\r\n\t// ---------- 私有方法 ----------\r\n\t/**\r\n\t * @summary 返回 all 方法内部执行的抽象函数\r\n\t * @param   {Object}    [context=null]\r\n\t * @param   {Array}     [args=[]]\r\n\t * @return  {Function}\r\n\t * */\r\n\t_allExecutor(context=null, args=[]){\r\n\t\t/**\r\n\t\t * @summary all 方法内部执行的迭代函数\r\n\t\t * @param   {Array}                 rs\r\n\t\t * @param   {Function|HandlerQueue} handler\r\n\t\t * @return  {Array}\r\n\t\t * */\r\n\t\treturn (rs, handler)=>{\r\n\t\t\tif( handler !== null ){\r\n\t\t\t\tif( HandlerQueue.is(handler) ){\r\n\t\t\t\t\trs.push( ...handler.with( context ).all( ...args ) );\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\trs.push( handler.apply(context, args) );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn rs;\r\n\t\t};\r\n\t}\r\n\t/**\r\n\t * @summary 返回 compose 和 pipe 方法内部执行的抽象函数\r\n\t * @param   {string}    method          取值有 'compose' 和 'pipe'\r\n\t * @param   {Object}    [context=null]\r\n\t * @param   {Array}     [args=[]]\r\n\t * @return  {Function}\r\n\t * */\r\n\t_funcExecutor(method, context=null, args=[]){\r\n\t\tlet first = true\r\n\t\t\t;\r\n\r\n\t\t/**\r\n\t\t * @summary compose 和 pipe 方法内部执行的迭代函数\r\n\t\t * @param   {Function|HandlerQueue|*}   params\r\n\t\t * @param   {Function|HandlerQueue}     handler\r\n\t\t * @return  {*}\r\n\t\t * */\r\n\t\treturn (params, handler)=>{\r\n\t\t\tif( first && (params || handler) ){\r\n\t\t\t\tfirst = false;\r\n\r\n\t\t\t\tif( params === null ){\r\n\t\t\t\t\tparams = handler;\r\n\t\t\t\t\thandler = null;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif( HandlerQueue.is(params) ){\r\n\t\t\t\t\tparams = params.with( context )[method]( ...args );\r\n\t\t\t\t}\r\n\t\t\t\telse if( handler !== null ){\r\n\t\t\t\t\tparams = params.apply(context, args);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif( handler !== null ){\r\n\t\t\t\tif( HandlerQueue.is(handler) ){\r\n\t\t\t\t\treturn handler.with( context )[method]( params );\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\treturn handler.call(context, params);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn params;\r\n\t\t};\r\n\t}\r\n\t/**\r\n\t * @summary 返回 line 方法内部执行的抽象函数\r\n\t * @param   {Object}    [context=null]\r\n\t * @param   {Array}     [args=[]]\r\n\t * @return  {Function}\r\n\t * */\r\n\t_lineExecutor(context=null, args=[]){\r\n\t\t/**\r\n\t\t * @summary line 方法内部执行的迭代函数\r\n\t\t * @param   {Function|HandlerQueue}     handler\r\n\t\t * @return  {boolean}\r\n\t\t * */\r\n\t\treturn (handler)=>{\r\n\t\t\tif( handler !== null ){\r\n\t\t\t\tif( HandlerQueue.is(handler) ){\r\n\t\t\t\t\treturn handler.with( context ).line( ...args );\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\treturn handler.apply(context, args) === false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\t\t};\r\n\t}\r\n\t/**\r\n\t * @summary 返回以 promise 方式执行 compose 和 pipe 方法内部执行的抽象函数\r\n\t * @param   {string}    method  取值有 'compose' 和 'pipe'\r\n\t * @param   {Object}    [context=null]\r\n\t * @param   {Array}     [args=[]]\r\n\t * @return  {Function}\r\n\t * */\r\n\t_funcExecutorPromise(method, context=null, args=[]){\r\n\t\tlet first = true\r\n\t\t\t;\r\n\r\n\t\t/**\r\n\t\t * @summary 以 promise 方式 compose 和 pipe 方法内部执行的迭代函数\r\n\t\t * @param   {Function|HandlerQueue|Promise<*>}  promise\r\n\t\t * @param   {Function|HandlerQueue}             handler\r\n\t\t * @return  {Promise<*>}\r\n\t\t * */\r\n\t\treturn (promise, handler)=>{\r\n\t\t\tif( first && (promise || handler) ){\r\n\t\t\t\tfirst = false;\r\n\r\n\t\t\t\tif( promise === null ){\r\n\t\t\t\t\tpromise = handler;\r\n\t\t\t\t\thandler = null;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif( HandlerQueue.is(promise) ){\r\n\t\t\t\t\tpromise = promise.with( context ).promise[method]( ...args );\r\n\t\t\t\t}\r\n\t\t\t\telse if( handler !== null ){\r\n\t\t\t\t\tpromise = Promise.resolve( promise.apply(context, args) );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif( handler !== null ){\r\n\t\t\t\treturn promise.then((params)=>{\r\n\t\t\t\t\tif( HandlerQueue.is(handler) ){\r\n\t\t\t\t\t\treturn handler.with( context )[method]( params );\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\treturn handler.call(context, params);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\treturn promise;\r\n\t\t};\r\n\t}\r\n\t/**\r\n\t * @summary 返回以 promise 方式执行 line 方法内部执行的抽象函数\r\n\t * @param   {Object}    [context=null]\r\n\t * @param   {Array}     [args=[]]\r\n\t * @return  {Function}\r\n\t * */\r\n\t_lineExecutorPromise(context=null, args=[]){\r\n\t\t/**\r\n\t\t * @summary 以 promise 方式 line 方法内部执行的迭代函数\r\n\t\t * @param   {Promise<boolean>}      promise\r\n\t\t * @param   {Function|HandlerQueue} handler\r\n\t\t * @return  {Promise<boolean>}\r\n\t\t * */\r\n\t\treturn (promise, handler)=>{\r\n\t\t\tif( handler !== null ){\r\n\t\t\t\treturn promise.then((rs)=>{\r\n\t\t\t\t\tif( rs === false ){\r\n\t\t\t\t\t\treturn Promise.reject();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif( HandlerQueue.is(handler) ){\r\n\t\t\t\t\t\treturn handler.with( context ).promise.line( ...args );\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\treturn handler.apply(context, args);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\treturn promise;\r\n\t\t};\r\n\t}\r\n\r\n\t// ---------- 公有函数 ----------\r\n\t/**\r\n\t * @summary 向队列中添加 handler\r\n\t * @param   {Function|HandlerQueue} handler\r\n\t * @return  {number}                handler 队列的长度，删除时使用该值 -1\r\n\t * @desc    可以添加 HandlerQueue 类型的的参数\r\n\t * */\r\n\tadd(handler){\r\n\t\tif( typeof handler === 'function' || HandlerQueue.is(handler) ){\r\n\t\t\treturn this._handlers.push( handler );\r\n\t\t}\r\n\t\telse{\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @summary 队列中是否存在该 handler\r\n\t * @param   {Function|HandlerQueue} handler\r\n\t * @return  {boolean}\r\n\t * */\r\n\thas(handler){\r\n\t\treturn this._handlers.indexOf( handler ) !== -1;\r\n\t}\r\n\t/**\r\n\t * @summary 从队列中移除相应的 handler\r\n\t * @param   {number|Function|HandlerQueue}  findBy\r\n\t * */\r\n\tremove(findBy){\r\n\t\tif( typeof findBy === 'function' || HandlerQueue.is(findBy) ){\r\n\t\t\tfindBy = this._handlers.indexOf( findBy );\r\n\t\t}\r\n\t\telse if( typeof findBy === 'number' ){\r\n\t\t\tfindBy = parseInt( findBy );    // 去掉小数\r\n\t\t}\r\n\t\telse{\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif( findBy > -1 ){\r\n\t\t\tthis._handlers[findBy] = null;\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @summary 清空队列\r\n\t * */\r\n\tclear(){\r\n\t\tthis._handlers = [];\r\n\t}\r\n\r\n\t/**\r\n\t * @summary 同时执行所有 handler，将返回结果作为一个数组返回\r\n\t * @param   {...*}  [args]\r\n\t * @return  {Array} 数组中将不包括已失效\r\n\t * @desc    当传入参数时，参数被视为传入 handler 的参数（所有 handler 都会传入相同的参数）\r\n\t *          若 handler 是 HandlerQueue 类型，将会执行其 all 方法将返回的结果评级的放入数组中\r\n\t * */\r\n\tall(...args){\r\n\t\treturn this._handlers.reduce(this._allExecutor(null, args), []);\r\n\t}\r\n\t/**\r\n\t * @summary 依次执行队列中的全部 handler，前一个 handler 的返回结果决定下一个 handler 是否执行\r\n\t * @param   {...*}      [args]\r\n\t * @return  {boolean}\r\n\t * @desc    当 handler 返回 false 时，将终止队列的中后续 handler 的执行\r\n\t *          若 handler 是 HandlerQueue 类型，将会执行其 line 方法\r\n\t * */\r\n\tline(...args){\r\n\t\treturn !this._handlers.some( this._lineExecutor(null, args) );\r\n\t}\r\n\t/**\r\n\t * @summary 用 reduce 的形式执行队列中的全部 handler，即前一个 handler 的返回结果作为下一个 handler 的参数\r\n\t * @param   {...*}  [args]\r\n\t * @return  {*}\r\n\t * @desc    当传入参数时，参数被视为传入第一个 handler 的参数\r\n\t *          由于为 reduce 方式调用，将只允许第一个执行 handler（即第一个） 有多参数，其它 handler 都应只有一个参数\r\n\t *          若 handler 是 HandlerQueue 类型，将会执行其 pipe 方法\r\n\t * */\r\n\tpipe(...args){\r\n\t\treturn this._handlers.reduce( this._funcExecutor('pipe', null, args) );\r\n\t}\r\n\t/**\r\n\t * @summary 为 pipe 方法的逆序，用 reduceRight 的形式执行队列中的全部 handler，即前一个 handler 的返回结果作为下一个 handler 的参数\r\n\t * @param   {...*}  [args]\r\n\t * @return  {*}\r\n\t * @desc    当传入参数时，参数被视为传入最后一个 handler 的参数\r\n\t *          由于为 reduce 方式调用，将只允许第一个执行 handler（即最后一个）有多参数，其它 handler 都应只有一个参数\r\n\t *          若 handler 是 HandlerQueue 类型，将会执行其 compose 方法\r\n\t * */\r\n\tcompose(...args){\r\n\t\treturn this._handlers.reduceRight( this._funcExecutor('compose', null, args) );\r\n\t}\r\n\t/**\r\n\t * @summary 指定上下文，返回执行 handler 队列的方法集合\r\n\t * @param   {Object}    [context=null]\r\n\t * @return  {Object}    以 context 为上下文的方法集合\r\n\t * */\r\n\twith(context=null){\r\n\t\t/**\r\n\t\t * @summary 指定在 context 的上下文中，同时执行所有 handler，将返回结果作为一个数组返回\r\n\t\t * @param   {...*}  [args]\r\n\t\t * @return  {Array} 数组中将不包括已失效\r\n\t\t * @desc    当传入参数时，参数被视为传入 handler 的参数（所有 handler 都会传入相同的参数）\r\n\t\t *          若 handler 是 HandlerQueue 类型，将会执行其 all 方法将返回的结果评级的放入数组中\r\n\t\t * */\r\n\t\tlet all = (...args)=>{\r\n\t\t\t\treturn this._handlers.reduce(this._allExecutor(context, args), []);\r\n\t\t\t}\r\n\t\t\t;\r\n\r\n\t\treturn {\r\n\t\t\tall\r\n\t\t\t/**\r\n\t\t\t * @summary 指定在 context 的上下文中，顺序执行队列中的全部 handler，前一个 handler 的返回结果决定下一个 handler 是否执行\r\n\t\t\t * @param   {...*}      [args]\r\n\t\t\t * @return  {boolean}\r\n\t\t\t * @desc    当 handler 返回 false 时，将终止队列的中后续 handler 的执行\r\n\t\t\t *          若 handler 是 HandlerQueue 类型，将会执行其 line 方法\r\n\t\t\t * */\r\n\t\t\t, line: (...args)=>{\r\n\t\t\t\treturn !this._handlers.some( this._lineExecutor(context, args) );\r\n\t\t\t}\r\n\t\t\t/**\r\n\t\t\t * @summary 指定在 context 的上下文中，用 reduce 的形式执行队列中的全部 handler，即前一个 handler 的返回结果作为下一个 handler 的参数\r\n\t\t\t * @param   {...*}  [args]\r\n\t\t\t * @return  {*}\r\n\t\t\t * @desc    当传入参数时，参数被视为传入第一个 handler 的参数\r\n\t\t\t *          由于为 reduce 方式调用，将只允许第一个执行 handler（即第一个） 有多参数，其它 handler 都应只有一个参数\r\n\t\t\t *          若 handler 是 HandlerQueue 类型，将会执行其 pipe 方法\r\n\t\t\t * */\r\n\t\t\t, pipe: (...args)=>{\r\n\t\t\t\treturn this._handlers.reduce( this._funcExecutor('pipe', context, args) );\r\n\t\t\t}\r\n\t\t\t/**\r\n\t\t\t * @summary 指定在 context 的上下文中，为 pipe 方法的逆序，用 reduceRight 的形式执行队列中的全部 handler，即前一个 handler 的返回结果作为下一个 handler 的参数\r\n\t\t\t * @param   {...*}  [args]\r\n\t\t\t * @return  {*}\r\n\t\t\t * @desc    当传入参数时，参数被视为传入最后一个 handler 的参数\r\n\t\t\t *          由于为 reduce 方式调用，将只允许第一个执行 handler（即最后一个）有多参数，其它 handler 都应只有一个参数\r\n\t\t\t *          若 handler 是 HandlerQueue 类型，将会执行其 compose 方法\r\n\t\t\t * */\r\n\t\t\t, compose: (...args)=>{\r\n\t\t\t\treturn this._handlers.reduceRight( this._funcExecutor('compose', context, args) );\r\n\t\t\t}\r\n\t\t\t, promise: {\r\n\t\t\t\t/**\r\n\t\t\t\t * @summary 指定在 context 的上下文中，以 Promise.all 的方式同时执行所有 handler，将返回结果作为一个数组返回\r\n\t\t\t\t * @param   {...*}  [args]\r\n\t\t\t\t * @return  {Promise<Array>} 数组中将不包括已失效\r\n\t\t\t\t * @desc    当传入参数时，参数被视为传入 handler 的参数（所有 handler 都会传入相同的参数）\r\n\t\t\t\t *          若 handler 是 HandlerQueue 类型，将会执行其 all 方法将返回的结果评级的放入数组中\r\n\t\t\t\t * */\r\n\t\t\t\tall: (...args)=>{\r\n\t\t\t\t\treturn Promise.all( all(args) );\r\n\t\t\t\t}\r\n\t\t\t\t/**\r\n\t\t\t\t * @summary 指定在 context 的上下文中，以 promise 串行的方式执行队列中的全部 handler，前一个 handler 的返回结果决定下一个 handler 是否执行\r\n\t\t\t\t * @param   {...*}      [args]\r\n\t\t\t\t * @return  {Promise<boolean>}\r\n\t\t\t\t * @desc    当 handler 返回 false 时，将终止队列的中后续 handler 的执行\r\n\t\t\t\t *          若 handler 是 HandlerQueue 类型，将会执行其 line 方法\r\n\t\t\t\t * */\r\n\t\t\t\t, line: (...args)=>{\r\n\t\t\t\t\treturn this._handlers.reduce(this._lineExecutorPromise(context, args), Promise.resolve());\r\n\t\t\t\t}\r\n\t\t\t\t/**\r\n\t\t\t\t * @summary 指定在 context 的上下文中，以 promise 串行的方式执行队列中的全部 handler，即前一个 handler 的返回结果作为下一个 handler 的参数\r\n\t\t\t\t * @param   {...*}  [args]\r\n\t\t\t\t * @return  {Promise<*>}\r\n\t\t\t\t * @desc    当传入参数时，参数被视为传入第一个 handler 的参数\r\n\t\t\t\t *          由于为 reduce 方式调用，将只允许第一个执行 handler（即第一个） 有多参数，其它 handler 都应只有一个参数\r\n\t\t\t\t *          若 handler 是 HandlerQueue 类型，将会执行其 pipe 方法\r\n\t\t\t\t * */\r\n\t\t\t\t, pipe: (...args)=>{\r\n\t\t\t\t\treturn this._handlers.reduce( this._funcExecutorPromise('pipe', context, args) );\r\n\t\t\t\t}\r\n\t\t\t\t/**\r\n\t\t\t\t * @summary 指定在 context 的上下文中，为 pipe 方法的逆序，以 promise 串行的方式执行队列中的全部 handler，即前一个 handler 的返回结果作为下一个 handler 的参数\r\n\t\t\t\t * @param   {...*}  [args]\r\n\t\t\t\t * @return  {Promise<*>}\r\n\t\t\t\t * @desc    当传入参数时，参数被视为传入最后一个 handler 的参数\r\n\t\t\t\t *          由于为 reduce 方式调用，将只允许第一个执行 handler（即最后一个）有多参数，其它 handler 都应只有一个参数\r\n\t\t\t\t *          若 handler 是 HandlerQueue 类型，将会执行其 compose 方法\r\n\t\t\t\t * */\r\n\t\t\t\t, compose: (...args)=>{\r\n\t\t\t\t\treturn this._handlers.reduceRight( this._funcExecutorPromise('compose', context, args) );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\t// ---------- 公有属性 ----------\r\n\t/**\r\n\t * @summary 返回以 promise 方式执行 handler 队列的方法集合\r\n\t * @return  {Object}\r\n\t * */\r\n\tget promise(){\r\n\t\treturn {\r\n\t\t\t/**\r\n\t\t\t * @summary 以 Promise.all 的方式同时执行所有 handler，将返回结果作为一个数组返回\r\n\t\t\t * @param   {...*}  [args]\r\n\t\t\t * @return  {Promise<Array>} 数组中将不包括已失效\r\n\t\t\t * @desc    当传入参数时，参数被视为传入 handler 的参数（所有 handler 都会传入相同的参数）\r\n\t\t\t *          若 handler 是 HandlerQueue 类型，将会执行其 all 方法将返回的结果评级的放入数组中\r\n\t\t\t * */\r\n\t\t\tall: (...args)=>{\r\n\t\t\t\treturn Promise.all( this.all(...args) );\r\n\t\t\t}\r\n\t\t\t/**\r\n\t\t\t * @summary 以 promise 串行的方式执行队列中的全部 handler，前一个 handler 的返回结果决定下一个 handler 是否执行\r\n\t\t\t * @param   {...*}      [args]\r\n\t\t\t * @return  {Promise<boolean>}\r\n\t\t\t * @desc    当 handler 返回 false 时，将终止队列的中后续 handler 的执行\r\n\t\t\t *          若 handler 是 HandlerQueue 类型，将会执行其 line 方法\r\n\t\t\t * */\r\n\t\t\t, line: (...args)=>{\r\n\t\t\t\treturn this._handlers.reduce(this._lineExecutorPromise(null, args), Promise.resolve());\r\n\t\t\t}\r\n\t\t\t/**\r\n\t\t\t * @summary 以 promise 串行的方式执行队列中的全部 handler，即前一个 handler 的返回结果作为下一个 handler 的参数\r\n\t\t\t * @param   {...*}  [args]\r\n\t\t\t * @return  {Promise<*>}\r\n\t\t\t * @desc    当传入参数时，参数被视为传入第一个 handler 的参数\r\n\t\t\t *          由于为 reduce 方式调用，将只允许第一个执行 handler（即第一个） 有多参数，其它 handler 都应只有一个参数\r\n\t\t\t *          若 handler 是 HandlerQueue 类型，将会执行其 pipe 方法\r\n\t\t\t * */\r\n\t\t\t, pipe: (...args)=>{\r\n\t\t\t\treturn this._handlers.reduce( this._funcExecutorPromise('pipe', null, args) );\r\n\t\t\t}\r\n\t\t\t/**\r\n\t\t\t * @summary 为 pipe 方法的逆序，以 promise 串行的方式执行队列中的全部 handler，即前一个 handler 的返回结果作为下一个 handler 的参数\r\n\t\t\t * @param   {...*}  [args]\r\n\t\t\t * @return  {Promise<*>}\r\n\t\t\t * @desc    当传入参数时，参数被视为传入最后一个 handler 的参数\r\n\t\t\t *          由于为 reduce 方式调用，将只允许第一个执行 handler（即最后一个）有多参数，其它 handler 都应只有一个参数\r\n\t\t\t *          若 handler 是 HandlerQueue 类型，将会执行其 compose 方法\r\n\t\t\t * */\r\n\t\t\t, compose: (...args)=>{\r\n\t\t\t\treturn this._handlers.reduceRight( this._funcExecutorPromise('compose', null, args) );\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\t/**\r\n\t * @summary 实现 toStringTag 接口\r\n\t * @desc    在 Object.prototype.toString.call( new HandlerQueue() ); 时将返回 [object HandlerQueue]\r\n\t * */\r\n\tget [Symbol.toStringTag](){\r\n\t\treturn 'HandlerQueue';\r\n\t}\r\n}\r\n\r\nexport default HandlerQueue;","module.exports = require(\"regenerator-runtime\");\n","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","'use strict';\r\n\r\nimport Model from './model.js';\r\nimport merge from '../util/merge.js';\r\n\r\n/**\r\n * 默认配置\r\n * @const\r\n * */\r\nconst CACHE_STORAGE_MODEL_CONFIG = {\r\n\t\tcacheName: 'storage'\r\n\t}\r\n\t;\r\n\r\n/**\r\n * @class\r\n * @desc    对浏览器源生 CacheStorage 接口进行封装，统一调用接口，主要提供给 Service Worker 调用，普通页面使用场景有限，在 Model.factory 工厂方法注册为 cacheStorage，别名 cs，将可以使用工厂方法生成\r\n * @extends Model\r\n * @example\r\n<pre>\r\nlet cacheStorageModel = new CacheStorageModel()\r\n\t, storage = Model.factory('cacheStorage')\r\n\t, cs = Model.factory('cs')\r\n\t;\r\n</pre>\r\n * */\r\nclass CacheStorageModel extends Model{\r\n\t/**\r\n\t * @constructor\r\n\t * @param   {Object}    [config={}]\r\n\t * @param   {string}    [config.cacheName]\r\n\t * @param   {string}    [config.eventType]\r\n\t * */\r\n\tconstructor(config={}){\r\n\t\tconfig = merge(config, CacheStorageModel.CONFIG);\r\n\r\n\t\tsuper( config );\r\n\r\n\t\tthis._config = config;\r\n\r\n\t\tif( 'caches' in self ){ // 判断\r\n\t\t\tthis._store = Promise.resolve( self.caches );\r\n\t\t}\r\n\t\telse{\r\n\t\t\tthis._store = Promise.reject( new Error('此浏览器不支持 Service Worker') );\r\n\t\t}\r\n\t}\r\n\r\n\t// ---------- 静态方法 ----------\r\n\t/**\r\n\t * @summary 将 url 字符串转换为 Request 对象\r\n\t * @static\r\n\t * @param   {string|Request}    url\r\n\t * @return  {Request}\r\n\t * */\r\n\tstatic tranToRequest(url){\r\n\t\t\r\n\t\tif( typeof url === 'object' && url instanceof Request ){}\r\n\t\telse{\r\n\t\t\turl = new Request( url );\r\n\t\t}\r\n\r\n\t\treturn url\r\n\t}\r\n\t/**\r\n\t * @summary 与 App 类约定的注入接口\r\n\t * @static\r\n\t * @param   {Base}  app\r\n\t * @desc    注入为 $cache，配置参数名 cache\r\n\t * */\r\n\tstatic inject(app){\r\n\t\tapp.inject('$cache', new CacheStorageModel( app.$options.cache ));\r\n\t}\r\n\r\n\t// ---------- 静态属性 ----------\r\n\t/**\r\n\t * @summary 默认配置\r\n\t * @static\r\n\t * @const\r\n\t * */\r\n\tstatic get CONFIG(){\r\n\t\treturn CACHE_STORAGE_MODEL_CONFIG;\r\n\t}\r\n\r\n\t// ---------- 公有方法 ----------\r\n\t/**\r\n\t * @summary 设置缓存\r\n\t * @override\r\n\t * @param   {string|Request}    topic\r\n\t * @param   {Response}          response\r\n\t * @return  {Promise}           返回一个 Promise 对象，在 resolve 时传回结果\r\n\t * */\r\n\tsetData(topic, response){\r\n\t\treturn this._store.then((caches)=>{\r\n\t\t\treturn caches.open( this._config.cacheName );\r\n\t\t}).then((cache)=>{\r\n\t\t\tconsole.log(`缓存 ${typeof topic === 'string' ? topic : topic.url}`);\r\n\r\n\t\t\treturn cache.put(CacheStorageModel.tranToRequest(topic), response);\r\n\t\t});\r\n\t}\r\n\t/**\r\n\t * @summary 获取缓存\r\n\t * @override\r\n\t * @param   {string|Request}    topic\r\n\t * @param   {Object}            [options={}]\r\n\t * @param   {boolean}           [options.ignoreVary]    请求的 url 和 header 都一致才是相同的资源\r\n\t * @return  {Promise<Response, Error>}  返回一个 Promise 对象，在 resolve 时传回查询到的缓存，reject 时传回 Error\r\n\t * */\r\n\tgetData(topic, options={}){\r\n\t\ttopic = CacheStorageModel.tranToRequest( topic );\r\n\r\n\t\treturn this._store.then((caches)=>{\r\n\t\t\treturn caches.match(topic, options);\r\n\t\t}).then((response)=>{\r\n\t\t\tlet result\r\n\t\t\t\t;\r\n\r\n\t\t\tif( response ){\r\n\t\t\t\tresult = response;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tresult = Promise.reject( new Error('不存在缓存 '+ topic.url) );\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\t\t});\r\n\t}\r\n\t/**\r\n\t * @summary 将缓存删除\r\n\t * @override\r\n\t * @param   {string|Request}    topic\r\n\t * @param   {Object}            [options={}]    cache.delete 的可选参数\r\n\t * @return  {Promise<boolean, Error>}   返回一个 Promise 对象，在 resolve 时传回结果\r\n\t * */\r\n\tremoveData(topic, options={}){\r\n\t\ttopic = CacheStorageModel.tranToRequest( topic );\r\n\r\n\t\treturn this._store.then((caches)=>{\r\n\t\t\treturn caches.open( this._config.cacheName );\r\n\t\t}).then(function(cache){\r\n\t\t\treturn cache.delete(topic, options);\r\n\t\t});\r\n\t}\r\n\t/**\r\n\t * @summary 清空缓存\r\n\t * @override\r\n\t * @return  {Promise<boolean>}  返回一个 Promise 对象，在 resolve 时传回结果\r\n\t * */\r\n\tclearData(){\r\n\t\tthis._store.then((caches)=>{\r\n\t\t\treturn caches.delete( this._config.cacheName );\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * @summary 添加缓存路径\r\n\t * @param   {string|Request}    topic\r\n\t * @return  {Promise}           返回一个 Promise 对象，在 resolve 时传回结果\r\n\t * */\r\n\taddData(topic){\r\n\t\treturn this._store.then((caches)=>{\r\n\t\t\treturn caches.open( this._config.cacheName );\r\n\t\t}).then((cache)=>{\r\n\t\t\treturn cache.add( topic );\r\n\t\t});\r\n\t}\r\n\t/**\r\n\t * @summary 基于 addAll 方法的封装\r\n\t * @param   {Request[]} cacheArray\r\n\t * @return  {Promise}   返回一个 Promise 对象，在 resolve 时传回结果\r\n\t * */\r\n\taddAll(cacheArray){\r\n\t\treturn this._store.then((caches)=>{\r\n\t\t\treturn caches.open( this._config.cacheName );\r\n\t\t}).then((cache)=>{\r\n\t\t\treturn cache.addAll( cacheArray );\r\n\t\t});\r\n\t}\r\n\t/**\r\n\t * @summary 获取当前当前 caches 中的缓存列表\r\n\t * @return  {Promise<Cache[]>}  返回一个Promise对象，在 resolve 时传回 Cache 对象 key 值组成的数组\r\n\t * */\r\n\tkeys(){\r\n\t\treturn this._store.then((caches)=>{\r\n\t\t\treturn caches.keys();\r\n\t\t});\r\n\t}\r\n\t/**\r\n\t * @summary 删除缓存记录\r\n\t * @param   {string}    key\r\n\t * @return  {Promise}   返回一个 Promise 对象，在 resolve 时传回结果\r\n\t * */\r\n\tcacheDelete(key){\r\n\t\treturn this._store.then((caches)=>{\r\n\t\t\treturn caches.delete( key );\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * @summary 类构造失败时的回调接口\r\n\t * @param   {Function}  callback\r\n\t * */\r\n\tcatch(callback){\r\n\t\tif( typeof callback === 'function' ){\r\n\t\t\tthis._store.catch( callback );\r\n\t\t}\r\n\t}\r\n\r\n\t// ---------- 公有属性 ----------\r\n\t/**\r\n\t * @summary 实现 toStringTag 接口\r\n\t * @desc    在 Object.prototype.toString.call( new Model() ); 时将返回 [object CacheStorageModel]\r\n\t * */\r\n\tget [Symbol.toStringTag](){\r\n\t\treturn 'CacheStorageModel';\r\n\t}\r\n}\r\n\r\n/**\r\n * 在 Model.factory 工厂方法注册，将可以使用工厂方法生成\r\n * */\r\nModel.register('cacheStorage', CacheStorageModel);\r\n/**\r\n * 注册别名\r\n * */\r\nModel.registerAlias('cacheStorage', 'cs');\r\n\r\nexport default CacheStorageModel;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","'use strict';\r\n\r\n/**\r\n * @file    Service Worker 后台执行文件\r\n * */\r\n\r\nimport CacheStorageModel    from '../model/cacheStorage.js';\r\n// import notify               from '../notify.js';\r\n\r\nconst IMAGE_EXT = [\r\n\t\t'png'\r\n\t\t, 'jpg'\r\n\t\t, 'jpeg'\r\n\t\t, 'gif'\r\n\t\t, 'bmp'\r\n\t\t, 'webp'\r\n\t]\r\n\t;\r\n\r\n/**\r\n * @summary     执行 Service Worker 监听事件\r\n * @function\r\n * @param       {string}                [cacheName='cacheStorage']\r\n * @param       {Request[]|string[]}    [cacheUrls=[]]\r\n * @param       {Object}                [errorHandler=[]]\r\n * @param       {string|Array}          [errorHandler[].ext]\r\n * @param       {Function}              [errorHandler[].handler]\r\n * */\r\nfunction serviceWorkerRun(cacheName='cacheStorage', cacheUrls=[], errorHandler=[]){\r\n\tconst cacheStorage = new CacheStorageModel({\r\n\t\t\tcacheName\r\n\t\t})\r\n\t\t;\r\n\r\n\tconsole.log('Service Worker 已加载');\r\n\r\n\t/**\r\n\t * Service Worker 安装事件\r\n\t * */\r\n\tself.addEventListener('install', (event)=>{\r\n\t\tconsole.log('Service Worker 安装完成，install event', event);\r\n\r\n\t\tlet preCache = new Promise((resolve, reject)=>{\r\n\t\t\t\tif( Array.isArray(cacheUrls) && cacheUrls.length ){\r\n\t\t\t\t\tresolve( cacheUrls );\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\treject();\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t;\r\n\r\n\t\tevent.waitUntil( preCache.then((cacheUrls)=>{   // 预加载\r\n\t\t\tconsole.log('预加载', cacheUrls);\r\n\r\n\t\t\treturn cacheStorage.addAll( cacheUrls );\r\n\t\t}, ()=>{\r\n\t\t\tconsole.log('没有预加载文件');\r\n\t\t}).then(()=>{\r\n\t\t\t/**\r\n\t\t\t * self.skipWaiting 跳过等待激活新的 Service Worker\r\n\t\t\t * 让 Service Worker 进入 activate 状态\r\n\t\t\t * */\r\n\t\t\treturn self.skipWaiting();\r\n\t\t}).catch((e)=>{\r\n\t\t\t// 安装失败\r\n\t\t\t// todo 发送记录\r\n\r\n\t\t\tconsole.log( e );\r\n\t\t}) );\r\n\t});\r\n\r\n\t/**\r\n\t * Service Worker 激活事件\r\n\t * */\r\n\tself.addEventListener('activate', (event)=>{\r\n\t\tconsole.log('新版本 Service Worker 激活 Active event,', event);\r\n\r\n\t\t// 更新，将不是正在使用的缓存删除\r\n\t\tevent.waitUntil( Promise.all([\r\n\t\t\tcacheStorage.keys()\r\n\t\t\t, cacheName\r\n\t\t]).then(([keyList, cacheName])=>{\r\n\t\t\treturn Promise.all( keyList.reduce((all, key)=>{\r\n\t\t\t\t// 更新，将不是正在使用的缓存删除\r\n\t\t\t\tif( cacheName !== key ){\r\n\t\t\t\t\tall.push( cacheStorage.cacheDelete(key) );\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn all;\r\n\t\t\t}, []) );\r\n\t\t}).then(()=>{\r\n\t\t\t/**\r\n\t\t\t * self.clients.claim 设置本身为 active 的 Service Worker\r\n\t\t\t * */\r\n\t\t\treturn self.clients.claim();\r\n\r\n\t\t\t// self.clients.claim().then(()=>{\r\n\t\t\t// \treturn self.clients.matchAll({\r\n\t\t\t// \t\ttype: 'window'\r\n\t\t\t// \t});\r\n\t\t\t// }).then((clients)=>{\r\n\t\t\t// \treturn clients.filter((client)=>{\r\n\t\t\t// \t\treturn 'navigate' in client;\r\n\t\t\t// \t}).map((client)=>{\r\n\t\t\t// \t\treturn client.navigate('activated.html');\r\n\t\t\t// \t});\r\n\t\t\t// });\r\n\t\t}) );\r\n\t});\r\n\r\n\t/**\r\n\t * 请求拦截\r\n\t * */\r\n\tself.addEventListener('fetch', (event)=>{\r\n\t\tlet request = event.request\r\n\t\t\t;\r\n\r\n\t\t// 判断为跨域请求\r\n\t\tif( request.url.search(location.host) === -1 ){\r\n\t\t\trequest = new Request(request.url, {\r\n\t\t\t\tmode: 'cors'\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tevent.respondWith( fetch(request).then((response)=>{\r\n\t\t\treturn cacheStorage.setData(request.clone(), response.clone()).then(()=>{\r\n\t\t\t\treturn response;\r\n\t\t\t});\r\n\t\t}, ()=>{\r\n\t\t\treturn cacheStorage.getData( request.clone() );\r\n\t\t}) );\r\n\r\n\t\t// 克隆该请求，Request 对象是 stream 类型的，只能读取一次\r\n\t\tevent.respondWith( cacheStorage.getData( request.clone() ).then((response)=>{\r\n\t\t\tlet result\r\n\t\t\t\t;\r\n\r\n\t\t\tif( response ){\r\n\r\n\t\t\t\t// // todo 判断是否需要更新资源\r\n\t\t\t\t// if( isNeedRefresh ){\r\n\t\t\t\t// \tresult = Promise.reject({\r\n\t\t\t\t// \t\tmessage: '需要更新资源'\r\n\t\t\t\t// \t});\r\n\t\t\t\t// }\r\n\t\t\t\t// else{\r\n\t\t\t\t// \tresult = response;\r\n\t\t\t\t// }\r\n\r\n\t\t\t\tresult = response;\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tresult = Promise.reject({\r\n\t\t\t\t\tmessage: '不存在 '+ request.url +' 的相关缓存'\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\t\t}).catch((e)=>{\r\n\t\t\tconsole.log( e && e.message );\r\n\r\n\t\t\treturn fetch( request ).then((response)=>{\r\n\t\t\t\tlet isCache = false\r\n\t\t\t\t\t;\r\n\r\n\t\t\t\t// 判断是否为一个异常的响应\r\n\t\t\t\tif( !response || response.status !== 200 || response.type !== 'basic' ){\r\n\r\n\t\t\t\t\tif( response.status > 200 && response.status < 400 ){\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconsole.log(`不缓存 ${request.url} status: ${response.status} type: ${response.type}`);\r\n\t\t\t\t\t// 异常响应，跨域资源，不缓存直接返回\r\n\t\t\t\t\t// 跨域资源 response.status 会返回 0\r\n\t\t\t\t\t// response.type:\r\n\t\t\t\t\t// basic    标准值\r\n\t\t\t\t\t// cors     跨域请求\r\n\t\t\t\t\t// error    网络错误\r\n\t\t\t\t\t// opaque   响应 no-cors 的跨域请求\r\n\r\n\t\t\t\t\t// todo 离线时处理\r\n\t\t\t\t\tif( errorHandler && Array.isArray(errorHandler) && errorHandler.length ){\r\n\t\t\t\t\t\tlet index = errorHandler.findIndex((d)=>{\r\n\t\t\t\t\t\t\t\tif( typeof d.ext === 'string' ){\r\n\t\t\t\t\t\t\t\t\treturn event.request.endsWith('.'+ d.ext);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse if( Array.isArray( d.ext ) ){\r\n\t\t\t\t\t\t\t\t\treturn d.ext.some((ext)=>{\r\n\t\t\t\t\t\t\t\t\t\treturn event.request.endsWith('.'+ ext);\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse if( d.ext instanceof RegExp ){\r\n\t\t\t\t\t\t\t\t\treturn d.ext.test( event.request.url );\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t, result = null\r\n\t\t\t\t\t\t\t;\r\n\r\n\t\t\t\t\t\tif( index !== -1 ){\r\n\t\t\t\t\t\t\tresult = errorHandler[index].handler(request, response);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif( result instanceof Response ){\r\n\t\t\t\t\t\t\tresponse = result;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * 当为图片时\r\n\t\t\t\t\t * */\r\n\t\t\t\t\t// let isImg = IMAGE_EXT.some((ext)=>{\r\n\t\t\t\t\t// \t\treturn request.endsWith('.'+ ext);\r\n\t\t\t\t\t// \t})\r\n\t\t\t\t\t// \t;\r\n\t\t\t\t\t//\r\n\t\t\t\t\t// if( isImg ){\r\n\t\t\t\t\t// \t/**\r\n\t\t\t\t\t// \t * 返回占位图\r\n\t\t\t\t\t// \t * */\r\n\t\t\t\t\t// \tresponse = new Response('', {\r\n\t\t\t\t\t// \t\theaders: {\r\n\t\t\t\t\t// \t\t\t'Content-Type': 'image/svg+xml'\r\n\t\t\t\t\t// \t\t\t, 'Cache-Control': 'no-store'\r\n\t\t\t\t\t// \t\t}\r\n\t\t\t\t\t// \t})\r\n\t\t\t\t\t// }\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\t// todo 判断哪些请求需要缓存\r\n\r\n\t\t\t\t\tif( request.method === 'GET' ){   // GET 类请求\r\n\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t * CacheStorage 只能缓存 GET 请求\r\n\t\t\t\t\t\t * */\r\n\t\t\t\t\t\tisCache = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif( isCache ){\r\n\t\t\t\t\tcacheStorage.setData(request, response.clone()).then(()=>{\r\n\t\t\t\t\t\tconsole.log(`已缓存 ${request.url}`);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn response;\r\n\t\t\t});\r\n\t\t}) );\r\n\t});\r\n\r\n\t/**\r\n\t * 收到消息事件\r\n\t * */\r\n\tself.addEventListener('message', (event)=>{\r\n\t\tlet {data, source} = event\r\n\t\t\t, {id, url, focused, visibilityState} = source\r\n\t\t\t;\r\n\r\n\t\t// 向所有打开的窗口通信\r\n\t\t// todo 消息处理\r\n\t\tself.clients.matchAll().then((clients)=>{\r\n\t\t\tclients.forEach((client)=>{\r\n\t\t\t    let {id} = client\r\n\t\t\t        ;\r\n\r\n\t\t\t\t// event.source 为消息来源的页面\r\n\t\t\t\tclient.postMessage( event.data );\r\n\t\t\t});\r\n\t\t});\r\n\t});\r\n\r\n\t/**\r\n\t * 收到推送事件\r\n\t * */\r\n\tself.addEventListener('push', (event)=>{\r\n\t\tlet data\r\n\t\t\t, tag\r\n\t\t\t;\r\n\r\n\t\tif( event.data ){\r\n\t\t\ttry{\r\n\t\t\t\tdata = event.data.json();\r\n\r\n\t\t\t\tdata.body = data.body || data.message || data.value;\r\n\r\n\t\t\t\ttag = data.tag = data.tag || Date.now();\r\n\t\t\t}\r\n\t\t\tcatch(e){\r\n\t\t\t\ttag = Date.now();\r\n\r\n\t\t\t\tdata = {\r\n\t\t\t\t\ttitle: 'Push'\r\n\t\t\t\t\t, body: event.data.text()\r\n\t\t\t\t\t, tag\r\n\t\t\t\t\t// , url\r\n\t\t\t\t\t// , icon\r\n\t\t\t\t\t// , actions: [{\r\n\t\t\t\t\t// \taction: 'ok', title: '确定'\r\n\t\t\t\t\t// }, {\r\n\t\t\t\t\t// \taction: 'cancel', title: '取消'\r\n\t\t\t\t\t// }]\r\n\t\t\t\t\t// , vibrate: [300, 100, 400]\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\t/**\r\n\t\t\t * self.Notification 方法使用报错，只能使用 showNotification 方法显示桌面通知，但返回值的 Promise resolve 中并没有出入 Notification 实例\r\n\t\t\t * */\r\n\r\n\t\t\t/**\r\n\t\t\t * event.waitUntil 接收 Promise 类型参数，等到 Promise 完成时，事件才最终完成\r\n\t\t\t * */\r\n\t\t\tevent.waitUntil( self.registration.showNotification(data.title, data) );\r\n\t\t}\r\n\t});\r\n\r\n\t/**\r\n\t * 订阅状态改变事件\r\n\t * */\r\n\tself.addEventListener('pushsubscriptionchange', (event)=>{\r\n\t\t// todo 重新订阅\r\n\t});\r\n\r\n\t/**\r\n\t * 同步数据事件\r\n\t * */\r\n\tself.addEventListener('sync', (event)=>{\r\n\t\t// todo do something\r\n\t\tconsole.log(event.tag, event.lastChance);\r\n\t});\r\n\r\n\t/**\r\n\t * 通知点击事件\r\n\t * */\r\n\tself.addEventListener('notificationclick', (event)=>{\r\n\t\t// 关闭点击的通知\r\n\t\tevent.notification.close();\r\n\t\tconsole.log('桌面通知被点击');\r\n\r\n\t\tlet {action} = event\r\n\t\t\t;\r\n\r\n\t\t// 添加动作\r\n\t\tswitch( action ){\r\n\t\t\tcase 'ok':\r\n\t\t\t\t// event.waitUntil( self.clients.openWindow(event.notification.data) );\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'cancel':\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tif( event.notification.data ){\r\n\t\t\t// 打开新窗口\r\n\t\t\tevent.waitUntil( self.clients.openWindow(event.notification.data) );\r\n\t\t}\r\n\r\n\t\t// todo 统计桌面通知被点击\r\n\r\n\t\t// event.waitUntil( self.clients.matchAll({\r\n\t\t// \ttype: 'window'\r\n\t\t// }).then((clients)=>{\r\n\t\t// \tlet client = clients.find((client)=>{\r\n\t\t// \t\t\treturn client.url === '/' && 'focus' in client;\r\n\t\t// \t\t})\r\n\t\t// \t\t;\r\n\t\t//\r\n\t\t// \tif( client ){\r\n\t\t// \t\treturn client.focus();\r\n\t\t// \t}\r\n\t\t//\r\n\t\t// \tif( clients.openWindow ){\r\n\t\t// \t\treturn clients.openWindow('/');\r\n\t\t// \t}\r\n\t\t// }) );\r\n\t});\r\n\t/**\r\n\t * 通知关闭事件\r\n\t * */\r\n\tself.addEventListener('notificationclose', (event)=>{\r\n\t\tconsole.log('桌面通知被关闭');\r\n\r\n\t\t// todo 统计桌面通知被点击\r\n\t});\r\n}\r\n\r\nexport default serviceWorkerRun;"],"sourceRoot":""}